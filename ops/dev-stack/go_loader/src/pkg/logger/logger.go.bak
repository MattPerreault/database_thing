package logger

import (
    "log"
    "net/http"
    "time"
    "github.com/gin-gonic/gin"
)

var currentLogLevel = log.InfoLevel

// SetLogLevel sets the log level for the package
func SetLogLevel(level log.Level) {
    currentLogLevel = level
}

// Logger is a middleware that logs the request and response details
func Logger() gin.HandlerFunc {
    return func(c *gin.Context) {
        start := time.Now()
        c.Next()
        end := time.Now()

        if currentLogLevel <= log.InfoLevel {
            log.Printf("%s %s %s %s\n", c.Request.Method, c.Request.URL, c.Writer.Status(), end.Sub(start))
        }
    }
}

// LogError is a middleware that logs the error details
func LogError(c *gin.Context, err error) {
    if currentLogLevel >= log.Errorlevel {
        log.Printf("Error: %v\n", err)
    }
    c.JSON(http.StatusInternalServerError, gin.H{"error": "Internal Server Error"})
}
