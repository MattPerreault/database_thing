ARG GO_VERSION=1.19.5
FROM golang:${GO_VERSION}-alpine as build
ENV GO111MODULE=on
RUN apk add --no-cache git
# Copy the source code to the container
# COPY ./ops/dev-stack/go_loader/src/* /go/src/app/
COPY ./ops/dev-stack/go_loader/src/ /go/src/app/
# Set the working directory
WORKDIR /go/src/app
RUN go mod download &&\
    go mod verify
# Build the Go service
# RUN CGO_ENABLED=0 go test -timeout 30s -v cmd/
# Build the executable
# RUN CGO_ENABLED=0 go build -o /go/bin/app *.go
# RUN CGO_ENABLED=0 go build -o /go/bin/app ./pkg/file.go
RUN CGO_ENABLED=0 go get
RUN CGO_ENABLED=0 go install *.go
RUN CGO_ENABLED=0 go build -o /go/bin/app -v *.go


FROM gcr.io/distroless/static-debian11:debug AS final
# Create a non-root user
USER nonroot:nonroot
# Copy the binary from the build stage
COPY --from=build --chown=nonroot:nonroot /go/bin/app /app
COPY --from=build --chown=nonroot:nonroot /go/src/app/static/. /static/
# Expose the port the service will run on
EXPOSE 8000

# Start the Go service
ENTRYPOINT ["/app"]